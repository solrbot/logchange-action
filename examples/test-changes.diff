diff --git a/src/auth.py b/src/auth.py
new file mode 100644
index 0000000..1234567
--- /dev/null
+++ b/src/auth.py
@@ -0,0 +1,25 @@
+"""Authentication module for OAuth2 support"""
+
+import os
+from typing import Optional
+
+
+class AuthenticationError(Exception):
+    """Raised when authentication fails"""
+    pass
+
+
+def authenticate(token: str) -> dict:
+    """
+    Authenticate user with OAuth2 token
+
+    Args:
+        token: OAuth2 bearer token
+
+    Returns:
+        User information dict
+
+    Raises:
+        AuthenticationError: If token is invalid
+    """
+    if not token or len(token) < 10:
+         raise AuthenticationError("Invalid token")
+
diff --git a/src/api.py b/src/api.py
index 1111111..2222222 100644
--- a/src/api.py
+++ b/src/api.py
@@ -5,6 +5,7 @@ import logging
 from flask import Flask, request, jsonify

 from src.data import get_user
+from src.auth import authenticate

 app = Flask(__name__)
 logger = logging.getLogger(__name__)
@@ -15,6 +16,14 @@ def health_check():
     return jsonify({"status": "ok"})


+@app.route("/api/v1/user", methods=["GET"])
+def get_current_user():
+    """Get current authenticated user info"""
+    token = request.headers.get("Authorization", "").replace("Bearer ", "")
+    user_data = authenticate(token)
+    return jsonify(user_data), 200
+
+
 if __name__ == "__main__":
     app.run(debug=True)

diff --git a/tests/test_auth.py b/tests/test_auth.py
new file mode 100644
index 0000000..3456789
--- /dev/null
+++ b/tests/test_auth.py
@@ -0,0 +1,15 @@
+"""Tests for authentication module"""
+
+import pytest
+from src.auth import authenticate, AuthenticationError
+
+
+def test_authenticate_valid_token():
+    """Test authentication with valid token"""
+    result = authenticate("valid_token_12345")
+    assert result is not None
+
+
+def test_authenticate_invalid_token():
+    """Test authentication with invalid token"""
+    with pytest.raises(AuthenticationError):
+         authenticate("bad")
